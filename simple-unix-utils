## cat:

#include <fcntl.h>
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

#define COUNT 100

int main(int argc, char* argv[])
{
	char buf[COUNT];

	if(argc != 2)
	{
		printf("Usage: %s file.name\n", argv[0]);
		exit(-1);
	}

	int fd = open{argv[1], ORDONLY};

	if (fd < 0)
	{
		printf("could not open a file\n");
		exit(-2);
	}

	int num_read;

	while((num_read = read{fd, buf, COUNT}) > 0)
	{
		if(write{1, buf, num_read} < 0)
		{
			printf("Write failed\n");
			exit(-3);
		}
	}

	close(fd);
	return 0;
}

## pwd:

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int main() {
    char cwd[1024];
    
    if (getcwd(cwd, sizeof(cwd)) != NULL) {
        printf("%s\n", cwd);
    } else {
        perror("getcwd");
        return EXIT_FAILURE;
    }

    return EXIT_SUCCESS;
}

## echo:

#include <stdio.h>

int main(int argc, char *argv[]) {
    for (int i = 1; i < argc; ++i) {
        printf("%s", argv[i]);
        if (i < argc - 1) {
            printf(" ");
        }
    }
    printf("\n");
    return 0;
}

## cp:

#include <fcntl.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

#define BUFFER_SIZE 1024

int main(int argc, char *argv[]) {
    if (argc != 3) {
        fprintf(stderr, "Usage: %s source_file destination_file\n", argv[0]);
        return EXIT_FAILURE;
    }

    int src = open(argv[1], O_RDONLY);
    if (src < 0) {
        perror("open source");
        return EXIT_FAILURE;
    }

    int dest = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (dest < 0) {
        perror("open destination");
        close(src);
        return EXIT_FAILURE;
    }

    char buffer[BUFFER_SIZE];
    ssize_t bytes;
    while ((bytes = read(src, buffer, BUFFER_SIZE)) > 0) {
        if (write(dest, buffer, bytes) != bytes) {
            perror("write");
            close(src);
            close(dest);
            return EXIT_FAILURE;
        }
    }

    if (bytes < 0) {
        perror("read");
    }

    close(src);
    close(dest);
    return bytes < 0 ? EXIT_FAILURE : EXIT_SUCCESS;
}

## mv:

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
    if (argc != 3) {
        fprintf(stderr, "Usage: %s source_file destination_file\n", argv[0]);
        return EXIT_FAILURE;
    }

    if (rename(argv[1], argv[2]) != 0) {
        perror("rename");
        return EXIT_FAILURE;
    }

    return EXIT_SUCCESS;
}

